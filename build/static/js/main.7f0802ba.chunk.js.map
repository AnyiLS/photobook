{"version":3,"sources":["components/useCameraScreen.js","components/SettingsModal.js","images/fondo.png","components/CameraScreen.js","PhotoBooth.js","index.js"],"names":["useCameraScreen","changeCamera","cameraPhoto","propTypes","CameraPhoto","getDataUri","canvas","document","createElement","context","getContext","video","getElementById","width","videoWidth","height","videoHeight","drawImage","toDataURL","SettingsModal","setShowModal","setIsTimerSet","isTimerSet","setIsFullScreen","isFullScreen","className","type","name","onChange","e","target","checked","element","documentElement","check","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","onClick","idealResolution","CameraScreen","useState","isCameraReady","setIsCameraReady","photoTaken","setPhotoTaken","imageToDownload","setImageToDownload","showModal","setCounter","setShowCounter","videoRef","useRef","facing","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","current","facingMode","FACING_MODES","USER","ENVIRONMENT","startCamera","then","catch","err","console","log","window","innerWidth","addEventListener","popUp","querySelector","orientation","style","display","displayPicture","uri","image","Image","onload","frame","src","React","setWidth","clientWidth","removeEventListener","Fragment","class","background","id","controls","ref","autoPlay","ImageBackground","alt","marginLeft","clearRect","download","href","removeItem","dataUri","setTimeout","disabled","location","reload","PhotoBooth","rootDiv","ReactDOM","render"],"mappings":"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","file":"static/js/main.7f0802ba.chunk.js","sourcesContent":["import CameraPhoto from \"jslib-html5-camera-photo\";\n\nconst useCameraScreen = () => {\n  /**\n   * Esta funcion cambia la camara de la frontal a la trasera.\n   * @returns {void} - retorna el cambio de camara.\n   */\n  const changeCamera = (cameraPhoto) => {\n    // console.log(cameraPhoto.getInputVideoDeviceInfos() ? )\n  };\n\n  changeCamera.propTypes = {\n    cameraPhoto: typeof CameraPhoto,\n  };\n\n  /**\n   * Esta funcion retorna la imagen en formato base 64.\n   * @return {string} - con la imagen obtenida.\n   */\n  const getDataUri = () => {\n    let canvas = document.createElement(\"canvas\");\n    let context = canvas.getContext(\"2d\");\n    let video = document.getElementById(\"video\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n    return canvas.toDataURL(\"image/jpg\");\n  };\n\n  return {\n    changeCamera,\n    getDataUri,\n  };\n};\n\nexport default useCameraScreen;\n\n// function showSwitchCameraButtons () {\n//     cameraPhoto.enumerateCameras().then((cameras) => {\n//       if (cameras && cameras.length > 0) {\n//         let cameraButtonsContainer = document.getElementById('cameraButtonsContainerId');\n//         cameraButtonsContainer.innerHTML = '';\n\n//         let h3Element = document.createElement('h3');\n//         h3Element.innerText = 'Choose your camera :';\n//         cameraButtonsContainer.appendChild(h3Element);\n\n//         cameras.forEach((camera) => {\n//           let { kind, label, deviceId } = camera;\n//           const buttonElement = document.createElement('button');\n//           buttonElement.innerHTML = `\n//               kind: ${kind} <br/>\n//               label: ${label} <br/>\n//               deviceId: ${deviceId}\n//             `;\n//           (function (deviceId) {\n//             buttonElement.addEventListener('click', function () {\n//               console.log('click on', deviceId);\n//               startCameraIdMaxResolution(deviceId);\n//             });\n//           })(deviceId);\n//           cameraButtonsContainer.appendChild(buttonElement);\n//         });\n//       }\n//     }).catch((error) => {\n//       console.log('Error could not enumerateCameras:', error);\n//     });\n//   }\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './settingsModal.css';\r\n\r\nconst SettingsModal = ({ setShowModal, setIsTimerSet, isTimerSet, setIsFullScreen, isFullScreen }) => {\r\n\r\n    const handleTimerSet = (e) => {\r\n        setIsTimerSet(e.target.checked);\r\n    }\r\n\r\n    const handleFullScreen = (element, check) => {\r\n        if (check.target.checked) {\r\n            if (element.requestFullScreen) {\r\n                element.requestFullScreen();\r\n            } else if (element.mozRequestFullScreen) {\r\n                element.mozRequestFullScreen();\r\n            } else if (element.webkitRequestFullScreen) {\r\n                element.webkitRequestFullScreen();\r\n            }\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n            } else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n            }\r\n        }\r\n\r\n        setIsFullScreen(check.target.checked);\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-bc\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"input-container_modal\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"timer\"\r\n                        onChange={handleTimerSet}\r\n                        checked={isTimerSet}\r\n                    />\r\n                    <label>Temporizador</label>\r\n                </div>\r\n                <div className=\"input-container_modal\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"fullscreen\"\r\n                        onChange={(e) => handleFullScreen(document.documentElement, e)}\r\n                        checked={ isFullScreen }\r\n                    />\r\n                    <label>Pantalla completa</label>\r\n                </div>\r\n                <div className=\"input-container_modal\">\r\n                    <button\r\n                        onClick={() => setShowModal(false)}\r\n                    >Salir</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSettingsModal.propTypes = {\r\n    setShowModal: PropTypes.func.isRequired,\r\n    setIsTimerSet: PropTypes.func.isRequired,\r\n    isTimerSet: PropTypes.bool.isRequired,\r\n    setIsFullScreen: PropTypes.func.isRequired,\r\n    isFullScreen: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default SettingsModal;\r\n","export default __webpack_public_path__ + \"static/media/fondo.15d34eda.png\";","import React, { useRef, useEffect, useState } from 'react'\r\nimport CameraPhoto, {\r\n\tFACING_MODES,\r\n\tIMAGE_TYPES,\r\n} from 'jslib-html5-camera-photo'\r\n\r\nimport useCameraScreen from './useCameraScreen'\r\n\r\nimport SettingsModal from './SettingsModal'\r\n\r\nimport './responsive-camera.css'\r\nimport './cameraScreen.css'\r\nimport './Camera.css'\r\nimport './animate.compat.css'\r\n\r\nimport ImageBackground from '../images/fondo.png'\r\n\r\n//Variables de configuracion de enfoque y resolucion de la camara\r\n// const facingMode = FACING_MODES.ENVIRONMENT;\r\nconst idealResolution = { width: 640, height: 480 }\r\n\r\nconst CameraScreen = () => {\r\n\t/** Hooks */\r\n\tconst { getDataUri } = useCameraScreen()\r\n\r\n\tconst [isCameraReady, setIsCameraReady] = useState(false)\r\n\tconst [photoTaken, setPhotoTaken] = useState(false)\r\n\tconst [imageToDownload, setImageToDownload] = useState('#')\r\n\tconst [showModal, setShowModal] = useState(false)\r\n\tconst [isTimerSet, setIsTimerSet] = useState(false)\r\n\tconst [isFullScreen, setIsFullScreen] = useState(false)\r\n\tconst [counter, setCounter] = useState(3)\r\n\tconst [showCounter, setShowCounter] = useState(false)\r\n\t/** Variables */\r\n\tconst videoRef = useRef()\r\n\tlet cameraPhoto = new CameraPhoto(videoRef)\r\n\r\n\t//Crear referencia para tomar el html de video\r\n\tlet facing = JSON.parse(localStorage.getItem('facing'))\r\n\r\n\tconst startCamera = () => {\r\n\t\tlet facingMode =\r\n\t\t\tfacing === 'USER' ? FACING_MODES.USER : FACING_MODES.ENVIRONMENT\r\n\t\tcameraPhoto\r\n\t\t\t.startCamera(facingMode, idealResolution)\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetIsCameraReady(true)\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err))\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!facing) {\r\n\t\t\tlocalStorage.setItem('facing', JSON.stringify('USER'))\r\n\t\t}\r\n\r\n\t\tlet screen = JSON.parse(localStorage.getItem('screen'))\r\n\r\n\t\tif (!screen) {\r\n\t\t\tlocalStorage.setItem('screen', JSON.stringify('camera'))\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t\tcameraPhoto = new CameraPhoto(videoRef.current)\r\n\r\n\t\t//Instanciar la libreria e iniciar la camara\r\n\t\t// eslint-disable-next-line\r\n\t\t// setCameraPhoto(new CameraPhoto(videoRef.current));\r\n\t\tstartCamera()\r\n\r\n\t\t// console.log(cameraPhoto.inputVideoDeviceInfos);\r\n\r\n\t\tif (window.innerWidth < 1200) {\r\n\t\t\twindow.addEventListener('orientationchange', (e) => {\r\n\t\t\t\tconst popUp = document.querySelector('.rotatePop')\r\n\r\n\t\t\t\tif (window.orientation === 0) {\r\n\t\t\t\t\tpopUp.style.display = 'flex'\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpopUp.style.display = 'none'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\tconst changeCamera = () => {\r\n\t\tif (facing === 'USER') {\r\n\t\t\tlocalStorage.setItem('facing', JSON.stringify('ENVIRONMENT'))\r\n\t\t} else {\r\n\t\t\tlocalStorage.setItem('facing', JSON.stringify('USER'))\r\n\t\t}\r\n\r\n\t\twindow.location.reload()\r\n\t}\r\n\r\n\tuseEffect(() => {}, [])\r\n\r\n\t// const startCamera = (idealFacingMode, idealResolution) => {\r\n\t//   console.log(\"facing_mode\", idealFacingMode);\r\n\t//   console.log(\"resolution\", idealResolution);\r\n\t//   console.log(\"dsfdsaf\", facing === \"USER\" ? FACING_MODES.USER : FACING_MODES.ENVIRONMENT)\r\n\t//   let facingMode = facing === \"USER\" ? FACING_MODES.USER : FACING_MODES.ENVIRONMENT;\r\n\t//   cameraPhoto\r\n\t//     .startCamera(facing === \"USER\" ? FACING_MODES.USER : FACING_MODES.ENVIRONMENT, idealResolution)\r\n\t//     .then(() => {\r\n\t//       console.log(\"camera is started !\");\r\n\t//       setIsCameraReady(true);\r\n\t//     })\r\n\t//     .catch((error) => {\r\n\t//       alert(error, \"asnid\");\r\n\t//     });\r\n\t// };\r\n\r\n\t// Pintar foto en canvas\r\n\tconst displayPicture = (uri) => {\r\n\t\tconst canvas = document.getElementById('photo')\r\n\t\tlet context = canvas.getContext('2d')\r\n\t\tlet image = new Image()\r\n\t\timage.onload = () => {\r\n\t\t\tcontext.drawImage(image, canvas.width * 0.1, 0, 470, 350)\r\n\r\n\t\t\tlet frame = new Image()\r\n\t\t\tframe.onload = () => {\r\n\t\t\t\tcontext.drawImage(frame, 0, 0, 670, 350)\r\n\t\t\t\tsetImageToDownload(canvas.toDataURL('image/jpg'))\r\n\t\t\t}\r\n\r\n\t\t\tframe.src = './assets/images/fondo.png'\r\n\t\t}\r\n\r\n\t\timage.src = uri\r\n\t}\r\n\r\n\t// Tomar la foto\r\n\tconst takePhoto = () => {\r\n\t\tlocalStorage.removeItem('screen')\r\n\t\tlet dataUri = getDataUri()\r\n\r\n\t\tconsole.log(dataUri)\r\n\r\n\t\tif (isTimerSet) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetCounter(2)\r\n\t\t\t}, 1000)\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetCounter(1)\r\n\t\t\t}, 2000)\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tdisplayPicture(dataUri)\r\n\t\t\t\tsetPhotoTaken(true)\r\n\t\t\t}, 3000)\r\n\t\t} else {\r\n\t\t\tdisplayPicture(dataUri)\r\n\t\t\tsetPhotoTaken(true)\r\n\t\t}\r\n\t}\r\n\r\n\t//Reiniciar camara\r\n\tconst restartCamera = () => {\r\n\t\t// Limpiar canvas, contador de timer y volver a mostrar la camara\r\n\t\tsetPhotoTaken(false)\r\n\t\tsetCounter(3)\r\n\t\tsetShowCounter(false)\r\n\r\n\t\tconst canvas = document.getElementById('photo')\r\n\t\tconst ctx = canvas.getContext('2d')\r\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height)\r\n\t}\r\n\r\n\tconst [width, setWidth] = React.useState(0)\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (document.getElementById('background-image')) {\r\n\t\t\tsetWidth(document.getElementById('background-image').clientWidth)\r\n\r\n\t\t\twindow.addEventListener('resize', () => {\r\n\t\t\t\tconsole.log(document.getElementById('background-image'))\r\n\t\t\t\tsetWidth(\r\n\t\t\t\t\tdocument.getElementById('background-image').clientWidth\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', () => {\r\n\t\t\t\tsetWidth(\r\n\t\t\t\t\tdocument.getElementById('background-image').clientWidth\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div\r\n\t\t\t\tclass=\"video-container\"\r\n\t\t\t\tstyle={{ width: width > 0 ? width : 'auto', background: photoTaken ? 'white' : 'black' }}>\r\n\t\t\t\t{!photoTaken && (\r\n\t\t\t\t\t<video\r\n\t\t\t\t\t\tstyle={{ width: width > 0 ? width : 'auto' }}\r\n\t\t\t\t\t\twidth=\"400\"\r\n\t\t\t\t\t\theight=\"341\"\r\n\t\t\t\t\t\tid=\"video\"\r\n\t\t\t\t\t\tcontrols\r\n\t\t\t\t\t\tref={videoRef}\r\n\t\t\t\t\t\tautoPlay></video>\r\n\t\t\t\t)}\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={ImageBackground}\r\n\t\t\t\t\talt=\"Overlay image\"\r\n\t\t\t\t\tid=\"background-image\"\r\n\t\t\t\t\tclass=\"overlay-image\"\r\n\t\t\t\t/>\r\n\t\t\t\t<canvas\r\n\t\t\t\t\tclassName=\"animated fadeIn\"\r\n\t\t\t\t\tid=\"photo\"\r\n\t\t\t\t\twidth=\"700\"\r\n\t\t\t\t\theight=\"350\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: photoTaken ? 'block' : 'none',\r\n\t\t\t\t\t}}></canvas>\r\n\t\t\t\t{!photoTaken ? (\r\n\t\t\t\t\t<div className=\"btns-wrapper_camera\">\r\n\t\t\t\t\t\t<div className=\"div-wrapper\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"settings-btn_camera\"\r\n\t\t\t\t\t\t\t\tonClick={() => setShowModal(true)}></button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"take-btn_camera\"\r\n\t\t\t\t\t\t\t\tonClick={takePhoto}\r\n\t\t\t\t\t\t\t\tdisabled={!isCameraReady}></button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"take-btn_camera2\"\r\n\t\t\t\t\t\t\t\tonClick={changeCamera}></button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"btns-wrapper_camera\">\r\n\t\t\t\t\t\t<div className=\"div-wrapper\" style={{ marginLeft: photoTaken ? 0 : '5%' }}>\r\n\t\t\t\t\t\t\t<div className=\"trie\" style={{ marginLeft: photoTaken ? 0 : '11%' }}>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName=\"try-btn_camera\"\r\n\t\t\t\t\t\t\t\t\tonClick={restartCamera}></button>\r\n\t\t\t\t\t\t\t\t{/* <p className=\"blue\">Descarta esta foto <br /> e intenta de nuevo</p> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"guardar\">\r\n\t\t\t\t\t\t\t\t{/* eslint-disable-next-line */}\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tid=\"download\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"save-btn_camera\"\r\n\t\t\t\t\t\t\t\t\tdownload=\"selfie\"\r\n\t\t\t\t\t\t\t\t\thref={imageToDownload}></a>\r\n\t\t\t\t\t\t\t\t{/* <p className=\"pink\">Guarda tu foto</p> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{showModal && (\r\n\t\t\t\t\t<SettingsModal\r\n\t\t\t\t\t\tsetShowModal={setShowModal}\r\n\t\t\t\t\t\tisTimerSet={isTimerSet}\r\n\t\t\t\t\t\tsetIsTimerSet={setIsTimerSet}\r\n\t\t\t\t\t\tsetIsFullScreen={setIsFullScreen}\r\n\t\t\t\t\t\tisFullScreen={isFullScreen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\r\n\t\t// <div className=\"main-container_camera animated fadeIn\">\r\n\t\t//   {/* <div className=\"logo-poto1\">\r\n\t\t//     <img src=\"./assets/images/logo.png\" alt=\"\" />\r\n\t\t//   </div> */}\r\n\t\t//   <RotateDevicePop />\r\n\r\n\t\t//   {photoTaken && (\r\n\t\t//     <h2 className=\"blue animated fadeInLeft\">\r\n\t\t//       <span className=\"pink\">¡Te ves genial! ████</span> <br />\r\n\t\t//       ████ Guarda tu foto\r\n\t\t//     </h2>\r\n\t\t//   )}\r\n\r\n\t\t//   <div className=\"video-wrapper_camera\">\r\n\t\t//     <div\r\n\t\t//       className=\"initial-img_camera\"\r\n\t\t//       style={{ display: photoTaken ? \"none\" : \"block\" }}\r\n\t\t//     >\r\n\t\t//       {/* <img src=\"./assets/images/frame.png\" alt=\"marco\" /> */}\r\n\t\t//       <video ref={videoRef} autoPlay={true} id=\"video\" height={500} />\r\n\r\n\t\t//       {showCounter && <div className=\"timer_camera\">{counter}</div>}\r\n\t\t//     </div>\r\n\r\n\t\t//     <canvas\r\n\t\t//       className=\"animated fadeIn\"\r\n\t\t//       id=\"photo\"\r\n\t\t//       width=\"650\"\r\n\t\t//       height=\"350\"\r\n\t\t//       style={{ display: photoTaken ? \"block\" : \"none\" }}\r\n\t\t//     ></canvas>\r\n\t\t//   </div>\r\n\r\n\t\t//   {!photoTaken ? (\r\n\t\t//     <div className=\"btns-wrapper_camera\">\r\n\t\t//       <div className=\"div-wrapper\">\r\n\t\t//         <button\r\n\t\t//           className=\"settings-btn_camera\"\r\n\t\t//           onClick={() => setShowModal(true)}\r\n\t\t//         ></button>\r\n\t\t//         <button\r\n\t\t//           className=\"take-btn_camera\"\r\n\t\t//           onClick={takePhoto}\r\n\t\t//           disabled={!isCameraReady}\r\n\t\t//         ></button>\r\n\t\t//         <button className=\"take-btn_camera2\" onClick={changeCamera}>\r\n\r\n\t\t//         </button>\r\n\t\t//       </div>\r\n\t\t//     </div>\r\n\t\t//   ) : (\r\n\t\t//     <div className=\"btns-wrapper_camera\">\r\n\t\t//       <div className=\"div-wrapper\">\r\n\r\n\t\t//         <div className=\"trie\">\r\n\t\t//           <button\r\n\t\t//             className=\"try-btn_camera\"\r\n\t\t//             onClick={restartCamera}\r\n\t\t//           ></button>\r\n\t\t//           {/* <p className=\"blue\">Descarta esta foto <br /> e intenta de nuevo</p> */}\r\n\t\t//         </div>\r\n\t\t//         <div className=\"guardar\">\r\n\t\t//           {/* eslint-disable-next-line */}\r\n\t\t//           <a\r\n\t\t//             id=\"download\"\r\n\t\t//             className=\"save-btn_camera\"\r\n\t\t//             download=\"selfie\"\r\n\t\t//             href={imageToDownload}\r\n\t\t//           ></a>\r\n\t\t//           {/* <p className=\"pink\">Guarda tu foto</p> */}\r\n\t\t//         </div>\r\n\t\t//       </div>\r\n\t\t//     </div>\r\n\t\t//   )}\r\n\r\n\t\t//   {/* MODAL DE CONFIGURACIONES */}\r\n\t\t//   {showModal && (\r\n\t\t//     <SettingsModal\r\n\t\t//       setShowModal={setShowModal}\r\n\t\t//       isTimerSet={isTimerSet}\r\n\t\t//       setIsTimerSet={setIsTimerSet}\r\n\t\t//       setIsFullScreen={setIsFullScreen}\r\n\t\t//       isFullScreen={isFullScreen}\r\n\t\t//     />\r\n\t\t//   )}\r\n\t\t// </div>\r\n\t)\r\n}\r\n\r\nconst RotateDevicePop = () => {\r\n\treturn (\r\n\t\t<div className=\"rotatePop\">\r\n\t\t\t<div className=\"icon-box\">\r\n\t\t\t\t<div className=\"icon-wrapper animated shakeX\">\r\n\t\t\t\t\t<img src=\"./assets/images/icon.png\" alt=\"rotate\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"text-box\">\r\n\t\t\t\t<p>Por favor gira tu dispositivo</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CameraScreen\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport MainScreen from \"./components/MainScreen\";\r\nimport PermissonScreen from \"./components/PermissonScreen\";\r\nimport CameraScreen from \"./components/CameraScreen\";\r\n\r\nconst PhotoBooth = () => {\r\n  \r\n  return (\r\n    <>\r\n      {/* {screenToShow === \"main\" && (\r\n        <MainScreen setScreenToShow={setScreenToShow} />\r\n      )}\r\n\r\n      {screenToShow === \"permisson\" && (\r\n        <PermissonScreen setScreenToShow={setScreenToShow} />\r\n      )} */}\r\n\r\n      <CameraScreen />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhotoBooth;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PhotoBooth from './PhotoBooth';\n\nconst rootDiv = document.getElementById('root');\n\nReactDOM.render(<PhotoBooth />, rootDiv);\n"],"sourceRoot":""}